// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  name String
  type Int @default(1)
  email_confirmed Boolean @default(false)
  active Boolean @default(true)
  posts posts[]
  logos logos[]
}

model logos {
  id Int @id @default(autoincrement())
  user_id Int
  user users @relation(fields: [user_id], references: [id])
  path String
  name_unique String
  name String
  width Int
  height Int
  url String
  timestampUrl DateTime
}

model posts {
  id Int @id @default(autoincrement())
  path String
  url String
  timestampUrl DateTime
  name_unique String
  name String
  size Int
  filter String[]
  description String?
  active Boolean
  width Int
  height Int
  type_post type_post @relation(fields: [type_post_id], references: [id])
  type_post_id Int
  type_media Int //0 - img, 1 - video, 2 - figurinhas, 3 - gifs
  accept_logo Boolean
  accept_information Boolean
  user_id Int
  user users @relation(fields: [user_id], references: [id])
  squares squares[]
}

model squares {
  id Int @id @default(autoincrement())
  posts_id Int
  posts posts @relation(fields: [posts_id], references: [id])
  type Int //0 - logo, 1 - information
  x Int @default(0)
  y Int @default(0)
  width Int @default(0)
  height Int @default(0)
}

model type_post {
  id Int @id @default(autoincrement())
  type String
  type_media Int
  posts posts[]
}
